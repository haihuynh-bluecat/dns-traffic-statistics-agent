# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: cimg/base:stable
    environment:
      BEAT_VERSION: v6.5.4
      GO_TGZ: go1.10.8.linux-amd64.tar.gz
      GOPATH: $HOME/gocode
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - checkout
      - run:
          name: Update and install required libraries.
          command: |
            sudo apt-get update -q
      - run:
          name: Setup Golang environment
          command: |
            wget -q https://dl.google.com/go/$GO_TGZ
            sudo tar -vzxf $GO_TGZ -C /usr/local go
      - run:
          name: Clone packetbeat project
          command: |
            export GOPATH=~/gocode
            mkdir -p $GOPATH/src/github.com/elastic
            cd $GOPATH/src/github.com/elastic
            git clone --branch $BEAT_VERSION https://github.com/elastic/beats
      - run:
          name: Replace Bluecat Packetbeat
          command: |
            export GOPATH=~/gocode
            rm -rf ${GOPATH}/src/github.com/elastic/beats/packetbeat
            cp -rf ~/repo/packetbeat ${GOPATH}/src/github.com/elastic/beats/packetbeat
      - run:
          name: Build packetbeat
          command: |
            export GOPATH=$HOME/gocode
            export PATH=/usr/local/go/bin:$GOPATH/bin:$PATH
            go version
            go env
            cd $GOPATH/src
            go install github.com/elastic/beats/vendor/github.com/magefile/mage
            ls -la $GOPATH/src/github.com/elastic/beats/vendor/github.com/tsg
            echo "Check old gopacket"
            cat $GOPATH/src/github.com/elastic/beats/vendor/github.com/tsg/gopacket/afpacket/afpacket.go
            echo "Remove old gopacket"
            rm -rf $GOPATH/src/github.com/elastic/beats/vendor/github.com/tsg/gopacket
            cd $GOPATH/src/github.com/elastic/beats/packetbeat
            go get -t -d -v ./...
            echo "Check new gopacket"
            cat $GOPATH/src/github.com/tsg/gopacket/afpacket/afpacket.go
            ls -la $GOPATH/bin
            mage -f -compile build/mage-linux-amd64
            PLATFORM_ID=linux-arm64 CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ GOOS=linux GOARCH=arm64 make build
      - run:
          name: Prepare to public
          command: |
            export GOPATH=~/gocode
            ls -la ~/repo
            ls -la $GOPATH/src/github.com/elastic/beats/packetbeat
            mkdir -p ~/repo/artifacts/${CIRCLE_PROJECT_REPONAME}/{packetbeat,backup}
            cd ~/repo/artifacts/
            cp $GOPATH/src/github.com/elastic/beats/packetbeat/build/golang-crossbuild/packetbeat-linux-arm64 ./${CIRCLE_PROJECT_REPONAME}/packetbeat/
            cp -rf ~/repo/dns-snmp-agent/ ./${CIRCLE_PROJECT_REPONAME}/
            cp -rf ~/repo/dns_traffic_deploy.sh ./${CIRCLE_PROJECT_REPONAME}/
            tar -czvf ${CIRCLE_PROJECT_REPONAME}.tar.gz ${CIRCLE_PROJECT_REPONAME}

      - run:
          name: Publish Release on GitHub
          command: |
            export PATH=/usr/local/go/bin:$PATH
            export GOPATH=~/gocode
            go get -u github.com/tcnksm/ghr
            ls -la $GOPATH/bin
            echo $CIRCLE_PROJECT_USERNAME
            echo $CIRCLE_PROJECT_REPONAME
            echo ${CIRCLE_TAG}
            $GOPATH/bin/ghr -debug -t ${ACCESS_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ~/repo/artifacts/

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/